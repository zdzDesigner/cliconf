local o = vim.g.onedark_color_overrides or {}

local hl = {}

hl.c = {
  fg             = o.white          or { gui = '#ABB2BF', cterm = '145',  cterm16 = '7'  },
  bg             = o.black          or { gui = '#282C34', cterm = '235',  cterm16 = '0'  },
  red            = o.red            or { gui = '#E06C75', cterm = '204',  cterm16 = '1'  },
  dark_red       = o.dark_red       or { gui = '#f44747', cterm = '196',  cterm16 = '9'  },
  -- dark_red       = o.dark_red       or { gui = '#BE5046', cterm = '196',  cterm16 = '9'  },
  green          = o.green          or { gui = '#98C379', cterm = '114',  cterm16 = '2'  },
  yellow         = o.yellow         or { gui = '#E5C07B', cterm = '180',  cterm16 = '3'  },
  dark_yellow    = o.dark_yellow    or { gui = '#D19A66', cterm = '173',  cterm16 = '11' },
  blue           = o.blue           or { gui = '#61AFEF', cterm = '39',   cterm16 = '4'  },
  purple         = o.purple         or { gui = '#C678DD', cterm = '170',  cterm16 = '5'  },
  cyan           = o.cyan           or { gui = '#56B6C2', cterm = '38',   cterm16 = '6'  },
  white          = o.white          or { gui = '#ABB2BF', cterm = '145',  cterm16 = '7'  },
  black          = o.black          or { gui = '#282C34', cterm = '235',  cterm16 = '0'  },
  visual_black   = o.visual_black   or { gui = 'NONE',    cterm = 'NONE', cterm16 = '0'  },
  comment_grey   = o.comment_grey   or { gui = '#5C6370', cterm = '59',   cterm16 = '15' },
  gutter_fg_grey = o.gutter_fg_grey or { gui = '#4B5263', cterm = '238',  cterm16 = '15' },
  cursor_grey    = o.cursor_grey    or { gui = '#2C323C', cterm = '236',  cterm16 = '8'  },
  visual_grey    = o.visual_grey    or { gui = '#3E4452', cterm = '237',  cterm16 = '15' },
  menu_grey      = o.menu_grey      or { gui = '#3E4452', cterm = '237',  cterm16 = '8'  },
  special_grey   = o.special_grey   or { gui = '#3B4048', cterm = '238',  cterm16 = '15' },
  vertsplit      = o.vertsplit      or { gui = '#181A1F', cterm = '59',   cterm16 = '15' },
}

hl.common = {
  Normal =            { fg = hl.c.white, bg = hl.c.black },
  NormalFloat =       { fg = hl.c.white, bg = hl.c.black },
  Conceal =           { },
  Cursor =            { fg = hl.c.special_grey, bg = hl.c.blue },
  CursorIM =          { },
  CursorLine =        { bg = hl.c.cursor_grey },
  CursorColumn =      { bg = hl.c.cursor_grey },
  ColorColumn =       { bg = hl.c.cursor_grey },
  Directory =         { fg = hl.c.purple },
  DiffAdd =           { fg = hl.c.bg, bg = hl.c.green },
  DiffDelete =        { fg = hl.c.bg, bg = hl.c.red  },
  DiffChange =        { fg = hl.c.yellow, gui = 'underline', cterm = 'underline' },
  DiffText =          { fg = hl.c.bg, bg = hl.c.yellow, gui = 'bold' },
  EndOfBuffer =       { fg = hl.c.gutter_fg_grey },
  ErrorMsg =          { fg = hl.c.dark_red },
  VertSplit =         { fg = hl.c.vertsplit },
  Folded =            { fg = hl.c.comment_grey },
  FoldColumn =        { },
  SignColumn =        { },
  Search =            { fg = hl.c.black, bg = hl.c.dark_yellow },
  IncSearch =         { fg = hl.c.yellow, bg = hl.c.comment_grey },
  LineNr =            { fg = hl.c.gutter_fg_grey },
  CursorLineNr =      { fg = hl.c.blue, bg = hl.c.black, gui = 'bold' },
  MatchParen =        { fg = hl.c.purple, bg = hl.c.black, gui = 'underline,bold', cterm = 'underline,bold' },
  ModeMsg =           { fg = hl.c.fg, gui = 'bold', cterm = 'bold' },
  MoreMsg =           { fg = hl.c.fg, gui = 'bold', cterm = 'bold' },
  NonText =           { fg = hl.c.special_grey },
  Pmenu =             { bg = hl.c.menu_grey },
  PmenuSel =          { fg = hl.c.black, bg = hl.c.blue },
  PmenuSbar =         { bg = hl.c.special_grey },
  PmenuThumb =        { bg = hl.c.fg },
  Question =          { fg = hl.c.red },
  QuickFixLine =      { fg = hl.c.black, bg = hl.c.yellow },
  SpecialKey =        { fg = hl.c.special_grey },
  -- if vim.fn.has("gui_running") then
    SpellBad =        { fg = hl.c.dark_red,   gui = 'underline', cterm = 'underline' },
    SpellCap =        { fg = hl.c.green,      gui = 'underline', cterm = 'underline' },
    SpellLocal =      { fg = hl.c.green,      gui = 'underline', cterm = 'underline' },
    SpellRare =       { fg = hl.c.red,        gui = 'underline', cterm = 'underline' },
  -- end
  StatusLine =        { fg = hl.c.fg,     bg = hl.c.visual_grey },
  StatusLineNC =      { fg = hl.c.black,  bg = hl.c.visual_grey },
  StatusLineTerm =    { fg = hl.c.fg,     bg = hl.c.visual_grey },
  StatusLineTermNC =  { fg = hl.c.black,  bg = hl.c.visual_grey },
  TabLine =           { fg = hl.c.comment_grey, bg = hl.c.black },
  TabLineFill =       { },
  TabLineSel =        { fg = hl.c.black, bg = hl.c.blue, gui = 'bold', cterm = 'bold' },
  Terminal =          { fg = hl.c.fg, bg = hl.c.black },
  Title =             { fg = hl.c.blue },
  Visual =            { fg = hl.c.visual_black, bg = hl.c.visual_grey },
  VisualNOS =         { bg = hl.c.visual_grey },
  WarningMsg =        { fg = hl.c.yellow },
  WildMenu =          { fg = hl.c.black, bg = hl.c.blue },
  FloatBorder =       { fg = hl.c.comment_grey },
  Underlined =        { fg = hl.c.dark_cyan, gui = 'underline', cterm = 'underline' },
  Ignore =            { },
  Error =             { fg = hl.c.dark_red, bg = hl.c.black, gui = 'bold', cterm = 'bold' },
  Todo =              { fg = hl.c.dark_yellow, bg = hl.c.bg, gui = 'bold', cterm = 'bold' },
  Debug =             { fg = hl.c.yellow },
  debugPC =           { bg = hl.cspecial_grey },
  debugBreakpoint =   { fg = hl.c.black, bg = hl.c.red },
}

hl.syntax = {
  Constant =          { fg = hl.c.cyan },
  String =            { fg = hl.c.green },
  Character =         { fg = hl.c.green },
  Number =            { fg = hl.c.dark_yellow },
  Boolean =           { fg = hl.c.dark_yellow },
  Float =             { fg = hl.c.dark_yellow },
  Identifier =        { fg = hl.c.blue },
  Function =          { fg = hl.c.yellow },
  Statement =         { fg = hl.c.purple },
  Conditional =       { fg = hl.c.purple },
  Repeat =            { fg = hl.c.purple },
  Label =             { fg = hl.c.blue },
  Operator =          { fg = hl.c.purple },
  Keyword =           { fg = hl.c.red },
  Exception =         { fg = hl.c.purple },
  PreProc =           { fg = hl.c.yellow },
  PreCondit =         { fg = hl.c.yellow },
  Include =           { fg = hl.c.purple },
  Define =            { fg = hl.c.purple },
  Macro =             { fg = hl.c.purple },
  Type =              { fg = hl.c.blue },
  StorageClass =      { fg = hl.c.blue },
  Structure =         { fg = hl.c.yellow },
  Typedef =           { fg = hl.c.yellow },
  Special =           { fg = hl.c.blue },
  SpecialChar =       { fg = hl.c.fg },
  Tag =               { fg = hl.c.green },
  Delimiter =         { fg = hl.c.blue },
  Comment =           { fg = hl.c.comment_grey, gui = 'italic', cterm = 'italic' },
  SpecialComment =    { fg = hl.c.comment_grey, gui = 'italic', cterm = 'italic' },
}

-- TS highlights
hl.ts = {
  TSAnnotation      = { fg = hl.c.fg },
  TSAttribute       = { fg = hl.c.cyan },
  TSBoolean         = { fg = hl.c.dark_yellow },
  TSCharacter       = { fg = hl.c.fg },
  TSComment         = { fg = hl.c.comment_grey, gui = 'italic', cterm = 'italic' },
  TSConditional     = { fg = hl.c.purple },
  TSConstant        = { fg = hl.c.blue },
  TSConstBuiltin    = { fg = hl.c.dark_yellow },
  TSConstMacro      = { fg = hl.c.dark_yellow },
  TSConstructor     = { fg = hl.c.cyan },
  TSError           = { fg = hl.c.fg },
  TSException       = { fg = hl.c.purple },
  TSField           = { fg = hl.c.red },
  TSFloat           = { fg = hl.c.dark_yellow },
  TSFunction        = { fg = hl.c.blue },
  TSFuncBuiltin     = { fg = hl.c.blue },
  TSFuncMacro       = { fg = hl.c.fg },
  TSInclude         = { fg = hl.c.purple },
  TSKeyword         = { fg = hl.c.purple },
  TSKeywordFunction = { fg = hl.c.purple },
  TSKeywordOperator = { fg = hl.c.purple },
  TSLabel           = { fg = hl.c.red },
  TSMethod          = { fg = hl.c.blue },
  TSNamespace       = { fg = hl.c.fg },
  TSNone            = { fg = hl.c.fg },
  TSNumber          = { fg = hl.c.dark_yellow },
  TSOperator        = { fg = hl.c.fg },
  TSParameter       = { fg = hl.c.cyan },
  TSParameterReference = { fg = hl.c.cyan },
  TSProperty        = { fg = hl.c.yellow },
  TSPunctDelimiter  = { fg = hl.c.fg },
  TSPunctBracket    = { fg = hl.c.fg },
  TSPunctSpecial    = { fg = hl.c.fg },
  TSRepeat          = { fg = hl.c.purple },
  TSString          = { fg = hl.c.green },
  TSStringRegex     = { fg = hl.c.dark_yellow },
  TSStringEscape    = { fg = hl.c.cyan },
  TSSymbol          = { fg = hl.c.cyan },
  TSTag             = { fg = hl.c.red },
  TSTagDelimiter    = { fg = hl.c.red },
  TSText            = { fg = hl.c.fg },
  TSStrong          = { fg = hl.c.fg },
  TSEmphasis        = { fg = hl.c.fg },
  TSUnderline       = { fg = hl.c.fg },
  TSStrike          = { fg = hl.c.fg },
  TSTitle           = { fg = hl.c.fg },
  TSLiteral         = { fg = hl.c.green },
  TSURI             = { fg = hl.c.fg },
  TSMath            = { fg = hl.c.fg },
  TSTextReference   = { fg = hl.c.fg },
  TSEnviroment      = { fg = hl.c.fg },
  TSEnviromentName  = { fg = hl.c.fg },
  TSNote            = { fg = hl.c.fg },
  TSWarning         = { fg = hl.c.fg },
  TSDanger          = { fg = hl.c.fg },
  TSType            = { fg = hl.c.blue },
  TSTypeBuiltin     = { fg = hl.c.dark_yellow },
  TSVariable        = { fg = hl.c.cyan },
  TSVariableBuiltin = { fg = hl.c.yellow }
}

-- LSP colors
hl.lsp = {
  LspCxxHlGroupEnumConstant           = { fg = hl.c.dark_yellow },
  LspCxxHlGroupMemberVariable         = { fg = hl.c.dark_yellow },
  LspCxxHlGroupNamespace              = { fg = hl.c.blue },
  LspCxxHlSkippedRegion               = { fg = hl.c.comment_grey },
  LspCxxHlSkippedRegionBeginEnd       = { fg = hl.c.red },
  LspDiagnosticsDefaultError          = { fg = hl.c.red },
  LspDiagnosticsDefaultWarning        = { fg = hl.c.yellow },
  LspDiagnosticsDefaultInformation    = { fg = hl.c.blue },
  LspDiagnosticsDefaultHint           = { fg = hl.c.purple },
  LspDiagnosticsSignError             = { fg = hl.c.red },
  LspDiagnosticsSignWarning           = { fg = hl.c.yellow },
  LspDiagnosticsSignInformation       = { fg = hl.c.blue },
  LspDiagnosticsSignHint              = { fg = hl.c.purple },
  LspDiagnosticsUnderlineError        = { fg = hl.c.red,     gui = 'underline', cterm = 'underline' },
  LspDiagnosticsUnderlineWarning      = { fg = hl.c.yellow,  gui = 'underline', cterm = 'underline' },
  LspDiagnosticsUnderlineInformation  = { fg = hl.c.blue,    gui = 'underline', cterm = 'underline' },
  LspDiagnosticsUnderlineHint         = { fg = hl.c.purple,  gui = 'underline', cterm = 'underline' },
  LspReferenceText                    = { fg = hl.c.fg, gui = 'underline', cterm = 'underline' },
  LspReferenceWrite                   = { fg = hl.c.fg, gui = 'underline', cterm = 'underline' },
  LspReferenceRead                    = { fg = hl.c.fg, gui = 'underline', cterm = 'underline' },
}

return hl
